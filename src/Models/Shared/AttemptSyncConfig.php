<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace airbyte\airbyte_oss\Models\Shared;


class AttemptSyncConfig
{
    /**
     * The values required to configure the destination. The schema for this must match the schema return by destination_definition_specifications/get for the destinationDefinition.
     * 
     * @var mixed $destinationConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationConfiguration')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $destinationConfiguration;
    
    /**
     * The values required to configure the source. The schema for this must match the schema return by source_definition_specifications/get for the source.
     * 
     * @var mixed $sourceConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceConfiguration')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $sourceConfiguration;
    
    /**
     * Contains the state for a connection. The stateType field identifies what type of state it is. Only the field corresponding to that type will be set, the rest will be null. If stateType=not_set, then none of the fields will be set.
     * 
     * @var ?\airbyte\airbyte_oss\Models\Shared\ConnectionState $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('airbyte\airbyte_oss\Models\Shared\ConnectionState')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectionState $state = null;
    
	public function __construct()
	{
		$this->destinationConfiguration = null;
		$this->sourceConfiguration = null;
		$this->state = null;
	}
}
